// Code generated by "stringer -type=Type -trimprefix=Type"; DO NOT EDIT.

package binary

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TypeNull-0]
	_ = x[TypeFalse-1]
	_ = x[TypeTrue-2]
	_ = x[TypeSByte-3]
	_ = x[TypeByte-4]
	_ = x[TypeChar-5]
	_ = x[TypeShort-6]
	_ = x[TypeUShort-7]
	_ = x[TypeInt-8]
	_ = x[TypeUInt-9]
	_ = x[TypeLong-10]
	_ = x[TypeULong-11]
	_ = x[TypeFloat-12]
	_ = x[TypeDouble-13]
	_ = x[TypeDecimal-14]
	_ = x[TypeStr8-15]
	_ = x[TypeStr16-16]
	_ = x[TypeObj-17]
	_ = x[TypeList-18]
	_ = x[TypeDict-19]
	_ = x[TypeBools-20]
	_ = x[TypeSBytes-21]
	_ = x[TypeBytes-22]
	_ = x[TypeChars-23]
	_ = x[TypeShorts-24]
	_ = x[TypeUShorts-25]
	_ = x[TypeInts-26]
	_ = x[TypeUInts-27]
	_ = x[TypeLongs-28]
	_ = x[TypeULongs-29]
	_ = x[TypeFloats-30]
	_ = x[TypeDoubles-31]
	_ = x[TypeDecimals-32]
}

const _Type_name = "NullFalseTrueSByteByteCharShortUShortIntUIntLongULongFloatDoubleDecimalStr8Str16ObjListDictBoolsSBytesBytesCharsShortsUShortsIntsUIntsLongsULongsFloatsDoublesDecimals"

var _Type_index = [...]uint8{0, 4, 9, 13, 18, 22, 26, 31, 37, 40, 44, 48, 53, 58, 64, 71, 75, 80, 83, 87, 91, 96, 102, 107, 112, 118, 125, 129, 134, 139, 145, 151, 158, 166}

func (i Type) String() string {
	if i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
